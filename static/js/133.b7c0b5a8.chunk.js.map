{"version":3,"file":"static/js/133.b7c0b5a8.chunk.js","mappings":"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","sources":["../node_modules/@capacitor/camera/src/web.ts"],"sourcesContent":["import { WebPlugin, CapacitorException } from '@capacitor/core';\n\nimport { CameraSource, CameraDirection } from './definitions';\nimport type {\n  CameraPlugin,\n  GalleryImageOptions,\n  GalleryPhotos,\n  ImageOptions,\n  PermissionStatus,\n  Photo,\n} from './definitions';\n\nexport class CameraWeb extends WebPlugin implements CameraPlugin {\n  async getPhoto(options: ImageOptions): Promise<Photo> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<Photo>(async (resolve, reject) => {\n      if (options.webUseInput || options.source === CameraSource.Photos) {\n        this.fileInputExperience(options, resolve, reject);\n      } else if (options.source === CameraSource.Prompt) {\n        let actionSheet: any = document.querySelector('pwa-action-sheet');\n        if (!actionSheet) {\n          actionSheet = document.createElement('pwa-action-sheet');\n          document.body.appendChild(actionSheet);\n        }\n        actionSheet.header = options.promptLabelHeader || 'Photo';\n        actionSheet.cancelable = false;\n        actionSheet.options = [\n          { title: options.promptLabelPhoto || 'From Photos' },\n          { title: options.promptLabelPicture || 'Take Picture' },\n        ];\n        actionSheet.addEventListener('onSelection', async (e: any) => {\n          const selection = e.detail;\n          if (selection === 0) {\n            this.fileInputExperience(options, resolve, reject);\n          } else {\n            this.cameraExperience(options, resolve, reject);\n          }\n        });\n      } else {\n        this.cameraExperience(options, resolve, reject);\n      }\n    });\n  }\n\n  async pickImages(_options: GalleryImageOptions): Promise<GalleryPhotos> {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise<GalleryPhotos>(async (resolve, reject) => {\n      this.multipleFileInputExperience(resolve, reject);\n    });\n  }\n\n  private async cameraExperience(\n    options: ImageOptions,\n    resolve: any,\n    reject: any,\n  ) {\n    if (customElements.get('pwa-camera-modal')) {\n      const cameraModal: any = document.createElement('pwa-camera-modal');\n      cameraModal.facingMode =\n        options.direction === CameraDirection.Front ? 'user' : 'environment';\n      document.body.appendChild(cameraModal);\n      try {\n        await cameraModal.componentOnReady();\n        cameraModal.addEventListener('onPhoto', async (e: any) => {\n          const photo = e.detail;\n\n          if (photo === null) {\n            reject(new CapacitorException('User cancelled photos app'));\n          } else if (photo instanceof Error) {\n            reject(photo);\n          } else {\n            resolve(await this._getCameraPhoto(photo, options));\n          }\n\n          cameraModal.dismiss();\n          document.body.removeChild(cameraModal);\n        });\n\n        cameraModal.present();\n      } catch (e) {\n        this.fileInputExperience(options, resolve, reject);\n      }\n    } else {\n      console.error(\n        `Unable to load PWA Element 'pwa-camera-modal'. See the docs: https://capacitorjs.com/docs/web/pwa-elements.`,\n      );\n      this.fileInputExperience(options, resolve, reject);\n    }\n  }\n\n  private fileInputExperience(\n    options: ImageOptions,\n    resolve: any,\n    reject: any,\n  ) {\n    let input = document.querySelector(\n      '#_capacitor-camera-input',\n    ) as HTMLInputElement;\n\n    const cleanup = () => {\n      input.parentNode?.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input') as HTMLInputElement;\n      input.id = '_capacitor-camera-input';\n      input.type = 'file';\n      input.hidden = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', (_e: any) => {\n        const file = input.files![0];\n        let format = 'jpeg';\n\n        if (file.type === 'image/png') {\n          format = 'png';\n        } else if (file.type === 'image/gif') {\n          format = 'gif';\n        }\n\n        if (\n          options.resultType === 'dataUrl' ||\n          options.resultType === 'base64'\n        ) {\n          const reader = new FileReader();\n\n          reader.addEventListener('load', () => {\n            if (options.resultType === 'dataUrl') {\n              resolve({\n                dataUrl: reader.result,\n                format,\n              } as Photo);\n            } else if (options.resultType === 'base64') {\n              const b64 = (reader.result as string).split(',')[1];\n              resolve({\n                base64String: b64,\n                format,\n              } as Photo);\n            }\n\n            cleanup();\n          });\n\n          reader.readAsDataURL(file);\n        } else {\n          resolve({\n            webPath: URL.createObjectURL(file),\n            format: format,\n          });\n          cleanup();\n        }\n      });\n      input.addEventListener('cancel', (_e: any) => {\n        reject(new CapacitorException('User cancelled photos app'));\n        cleanup();\n      });\n    }\n\n    input.accept = 'image/*';\n    (input as any).capture = true;\n\n    if (\n      options.source === CameraSource.Photos ||\n      options.source === CameraSource.Prompt\n    ) {\n      input.removeAttribute('capture');\n    } else if (options.direction === CameraDirection.Front) {\n      (input as any).capture = 'user';\n    } else if (options.direction === CameraDirection.Rear) {\n      (input as any).capture = 'environment';\n    }\n\n    input.click();\n  }\n\n  private multipleFileInputExperience(resolve: any, reject: any) {\n    let input = document.querySelector(\n      '#_capacitor-camera-input-multiple',\n    ) as HTMLInputElement;\n\n    const cleanup = () => {\n      input.parentNode?.removeChild(input);\n    };\n\n    if (!input) {\n      input = document.createElement('input') as HTMLInputElement;\n      input.id = '_capacitor-camera-input-multiple';\n      input.type = 'file';\n      input.hidden = true;\n      input.multiple = true;\n      document.body.appendChild(input);\n      input.addEventListener('change', (_e: any) => {\n        const photos = [];\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < input.files!.length; i++) {\n          const file = input.files![i];\n          let format = 'jpeg';\n\n          if (file.type === 'image/png') {\n            format = 'png';\n          } else if (file.type === 'image/gif') {\n            format = 'gif';\n          }\n          photos.push({\n            webPath: URL.createObjectURL(file),\n            format: format,\n          });\n        }\n        resolve({ photos });\n        cleanup();\n      });\n      input.addEventListener('cancel', (_e: any) => {\n        reject(new CapacitorException('User cancelled photos app'));\n        cleanup();\n      });\n    }\n\n    input.accept = 'image/*';\n\n    input.click();\n  }\n\n  private _getCameraPhoto(photo: Blob, options: ImageOptions) {\n    return new Promise<Photo>((resolve, reject) => {\n      const reader = new FileReader();\n      const format = photo.type.split('/')[1];\n      if (options.resultType === 'uri') {\n        resolve({\n          webPath: URL.createObjectURL(photo),\n          format: format,\n          saved: false,\n        });\n      } else {\n        reader.readAsDataURL(photo);\n        reader.onloadend = () => {\n          const r = reader.result as string;\n          if (options.resultType === 'dataUrl') {\n            resolve({\n              dataUrl: r,\n              format: format,\n              saved: false,\n            });\n          } else {\n            resolve({\n              base64String: r.split(',')[1],\n              format: format,\n              saved: false,\n            });\n          }\n        };\n        reader.onerror = e => {\n          reject(e);\n        };\n      }\n    });\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    if (typeof navigator === 'undefined' || !navigator.permissions) {\n      throw this.unavailable('Permissions API not available in this browser');\n    }\n\n    try {\n      // https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query\n      // the specific permissions that are supported varies among browsers that implement the\n      // permissions API, so we need a try/catch in case 'camera' is invalid\n      const permission = await window.navigator.permissions.query({\n        name: 'camera',\n      });\n      return {\n        camera: permission.state,\n        photos: 'granted',\n      };\n    } catch {\n      throw this.unavailable(\n        'Camera permissions are not available in this browser',\n      );\n    }\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async pickLimitedLibraryPhotos(): Promise<GalleryPhotos> {\n    throw this.unavailable('Not implemented on web.');\n  }\n\n  async getLimitedLibraryPhotos(): Promise<GalleryPhotos> {\n    throw this.unavailable('Not implemented on web.');\n  }\n}\n\nconst Camera = new CameraWeb();\n\nexport { Camera };\n"],"names":["CameraWeb","WebPlugin","getPhoto","options","Promise","async","resolve","reject","webUseInput","source","CameraSource","Photos","this","fileInputExperience","Prompt","actionSheet","document","querySelector","createElement","body","appendChild","header","promptLabelHeader","cancelable","title","promptLabelPhoto","promptLabelPicture","addEventListener","e","detail","cameraExperience","pickImages","_options","multipleFileInputExperience","customElements","get","cameraModal","facingMode","direction","CameraDirection","Front","componentOnReady","photo","CapacitorException","Error","_getCameraPhoto","dismiss","removeChild","present","console","error","input","cleanup","_a","parentNode","id","type","hidden","_e","file","files","format","resultType","reader","FileReader","dataUrl","result","b64","split","base64String","readAsDataURL","webPath","URL","createObjectURL","accept","capture","removeAttribute","Rear","click","multiple","photos","i","length","push","saved","onloadend","r","onerror","checkPermissions","navigator","permissions","unavailable","camera","window","query","name","state","requestPermissions","unimplemented","pickLimitedLibraryPhotos","getLimitedLibraryPhotos","Camera"],"sourceRoot":""}