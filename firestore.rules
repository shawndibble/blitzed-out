rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // User data - only authenticated users can access their own data
    match /user-data/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Custom actions - authenticated users can submit, anonymous read
    match /custom-actions/{actionId} {
      allow read: if true; // Public read for game content
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['grouping', 'customAction', 'ttl'])
        && request.resource.data.grouping is string
        && request.resource.data.customAction is string
        && request.resource.data.ttl is timestamp;
      allow update, delete: if false; // No updates/deletes allowed
    }
    
    // Game boards - authenticated users can create, public read with TTL
    match /game-boards/{boardId} {
      allow read: if true; // Public read for sharing boards
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['title', 'gameBoard', 'settings', 'checksum', 'ttl'])
        && request.resource.data.title is string
        && request.resource.data.gameBoard is string
        && request.resource.data.checksum is string
        && request.resource.data.ttl is timestamp;
      allow update: if request.auth != null 
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['ttl']);
      allow delete: if false; // Let TTL handle cleanup
    }
    
    // Chat rooms and messages
    match /chat-rooms/{roomId} {
      // Allow read/write access to room metadata for authenticated users
      allow read, write: if request.auth != null;
      
      match /messages/{messageId} {
        // Allow reading all messages in a room for authenticated users (including anonymous)
        allow read: if request.auth != null;
        
        // Allow listing/querying messages in a room for authenticated users
        allow list: if request.auth != null;
        
        // Allow creating messages with validation
        allow create: if request.auth != null 
          && request.resource.data.keys().hasAll(['text', 'ttl', 'type', 'uid', 'displayName', 'timestamp'])
          && request.resource.data.uid == request.auth.uid
          && request.resource.data.text is string
          && request.resource.data.text.size() <= 1000 // Limit message length
          && request.resource.data.type in ['chat', 'actions', 'settings', 'room', 'media']
          && request.resource.data.ttl is timestamp;
          
        // Allow users to delete their own messages
        allow delete: if request.auth != null && resource.data.uid == request.auth.uid;
        
        // No message editing allowed
        allow update: if false;
      }
    }
    
    // Rate limiting collection (internal use)
    match /rate-limits/{userId} {
      allow read, write: if false; // Only system can access
    }
    
    // Schedule - authenticated users can create, public read
    match /schedule/{scheduleId} {
      allow read: if true; // Public read for game schedules
      allow create: if request.auth != null 
        && request.resource.data.keys().hasAll(['dateTime', 'url', 'room'])
        && request.resource.data.dateTime is timestamp
        && request.resource.data.url is string
        && request.resource.data.room is string;
      allow update, delete: if false; // No modifications after creation
    }
  }
}