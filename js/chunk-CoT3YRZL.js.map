{"version":3,"mappings":"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","names":["CloseIcon","close","jsx","IconButton","MuiClose","useBreakpoint","breakpoint","theme","useTheme","useMediaQuery","Accordion","styled","props","MuiAccordion","AccordionDetails","MuiAccordionDetails","AccordionSummary","MuiAccordionSummary","ArrowForwardIosSharpIcon","useSchedule","value","React","ScheduleContext","Logo","CastButton","isCasting","setIsCasting","useState","castSession","setCastSession","room","useParams","castButtonRef","useRef","castReady","setCastReady","userRequestedStop","setUserRequestedStop","resetCastingState","useCallback","clearUserStopFlag","sendCastMessage","session","castUrl","error","useEffect","initializeCastApi","_a","_b","_c","_d","setupSessionListener","castContext","currentSession","event","_e","_f","isAvailable","script","toggleCasting","e","Tooltip","t","CastConnectedIcon","CastIcon","themeIcons","LightModeIcon","DarkModeIcon","ThemeToggle","size","tooltip","ariaLabel","resolvedThemeMode","toggleTheme","useTranslation","CurrentIcon","handleToggle","getTooltipText","getAriaLabel","PlayersOnline","forwardRef","playerList","onClick","innerRef","ref","combinedRef","jsxs","ButtonBase","CircleIcon","Schedule","lazyWithRetry","__vitePreload","MenuDrawer","UserPresenceOverlay","Navigation","openSchedule","setOpenSchedule","openUserPresence","setOpenUserPresence","seen","setSeen","schedule","isMobile","playersOnlineRef","handleScheduleClick","handleUserPresenceClick","handleUserPresenceClose","AppBar","Toolbar","Box","Badge","CalendarMonth","Suspense","Portal","languages"],"ignoreList":[],"sources":["../../src/components/CloseIcon/index.tsx","../../src/hooks/useBreakpoint.ts","../../src/components/Accordion/index.tsx","../../src/components/Accordion/Details/index.tsx","../../src/components/Accordion/Summary/index.tsx","../../src/context/hooks/useSchedule.ts","../../src/images/blitzed-out.png","../../src/components/CastButton/index.tsx","../../src/components/ThemeToggle/index.tsx","../../src/views/Navigation/PlayersOnline/index.tsx","../../src/views/Navigation/index.tsx","../../src/services/i18nHelpers.ts"],"sourcesContent":["import MuiClose from '@mui/icons-material/Close';\nimport { IconButton } from '@mui/material';\n\ninterface CloseIconProps {\n  close: () => void;\n}\n\nexport default function CloseIcon({ close }: CloseIconProps): JSX.Element {\n  return (\n    <IconButton\n      aria-label=\"close\"\n      onClick={close}\n      sx={{\n        position: 'absolute',\n        right: 8,\n        top: 8,\n      }}\n    >\n      <MuiClose />\n    </IconButton>\n  );\n}\n","import { useMediaQuery, useTheme } from '@mui/material';\nimport { Breakpoint } from '@mui/material/styles';\n\nexport default function useBreakpoint(breakpoint: Breakpoint = 'sm'): boolean {\n  const theme = useTheme();\n  return useMediaQuery(theme.breakpoints.down(breakpoint));\n}\n","import { styled } from '@mui/material/styles';\nimport MuiAccordion, { AccordionProps } from '@mui/material/Accordion';\n\nconst Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: `1px solid ${theme.palette.divider}`,\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}));\n\nexport default Accordion;\n","import { styled } from '@mui/material/styles';\nimport MuiAccordionDetails, { AccordionDetailsProps } from '@mui/material/AccordionDetails';\n\nconst AccordionDetails = styled(MuiAccordionDetails)<AccordionDetailsProps>(({ theme }) => ({\n  padding: theme.spacing(2),\n  borderTop: `1px solid ${theme.palette.divider}`,\n}));\n\nexport default AccordionDetails;\n","import { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordionSummary, { AccordionSummaryProps } from '@mui/material/AccordionSummary';\n\nconst AccordionSummary = styled((props: AccordionSummaryProps) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  backgroundColor:\n    theme.palette.mode === 'dark' ? 'rgba(255, 255, 255, .05)' : 'rgba(148, 163, 184, .08)',\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(90deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport default AccordionSummary;\n","import React from 'react';\nimport { ScheduleContext, ScheduleContextType } from '../schedule';\n\nexport default function useSchedule(): ScheduleContextType {\n  const value = React.useContext(ScheduleContext);\n\n  if (!value) {\n    throw new Error(\"ScheduleContext's value is undefined.\");\n  }\n\n  return value;\n}\n","export default \"__VITE_ASSET__BYbHA2Oh__\"","import { IconButton, Tooltip } from '@mui/material';\nimport { Params, useParams } from 'react-router-dom';\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport CastConnectedIcon from '@mui/icons-material/CastConnected';\nimport CastIcon from '@mui/icons-material/Cast';\nimport { t } from 'i18next';\n\n// Global flags to track Cast API state\nwindow.__castApiInitialized = window.__castApiInitialized || false;\nwindow.__castScriptLoading = window.__castScriptLoading || false;\n\nexport default function CastButton(): JSX.Element | null {\n  const [isCasting, setIsCasting] = useState<boolean>(false);\n  const [castSession, setCastSession] = useState<any>(null);\n  const { id: room } = useParams<Params>();\n  const castButtonRef = useRef<HTMLButtonElement>(null);\n  const [castReady, setCastReady] = useState<boolean>(false);\n  const [userRequestedStop, setUserRequestedStop] = useState<boolean>(false);\n\n  // Reset casting state and session\n  const resetCastingState = useCallback((clearUserStopFlag = false) => {\n    setIsCasting(false);\n    setCastSession(null);\n    if (clearUserStopFlag) {\n      setUserRequestedStop(false);\n    }\n  }, []);\n\n  // Function to send a message to the cast session\n  const sendCastMessage = useCallback(\n    (session: any) => {\n      try {\n        const castUrl = `${window.location.origin}/${room}/cast`;\n\n        session.sendMessage('urn:x-cast:com.blitzedout.app', {\n          type: 'LOAD',\n          url: castUrl,\n        });\n      } catch (error) {\n        console.error('Error sending cast message:', error);\n      }\n    },\n    [room]\n  );\n\n  // Initialize the Cast API when the component mounts\n  useEffect(() => {\n    // Function to initialize the Cast API\n    const initializeCastApi = () => {\n      try {\n        if (!window?.cast?.framework) {\n          return;\n        }\n\n        // Only initialize once\n        if (window.__castApiInitialized) {\n          setCastReady(true);\n          setupSessionListener();\n          return;\n        }\n\n        const castContext = window.cast.framework.CastContext.getInstance();\n\n        // Use your custom receiver application ID\n        castContext.setOptions({\n          receiverApplicationId: '1227B8DE', // Keep your custom app ID\n          autoJoinPolicy: window.chrome?.cast?.AutoJoinPolicy?.ORIGIN_SCOPED,\n        });\n\n        window.__castApiInitialized = true;\n        setCastReady(true);\n        setupSessionListener();\n      } catch (error) {\n        console.error('Error initializing Cast API:', error);\n      }\n    };\n\n    // Set up session state listener\n    const setupSessionListener = () => {\n      try {\n        const castContext = window.cast?.framework?.CastContext.getInstance();\n        if (!castContext) return;\n\n        // Check if there's already an active session\n        const currentSession = castContext.getCurrentSession();\n        if (currentSession) {\n          setIsCasting(true);\n          setCastSession(currentSession);\n          if (room) {\n            sendCastMessage(currentSession);\n          }\n        }\n\n        if (!window?.cast?.framework) return;\n\n        // Set up session state listener\n        castContext.addEventListener(\n          window.cast.framework.CastContextEventType.SESSION_STATE_CHANGED,\n          (event: { sessionState: string }) => {\n            const session = castContext.getCurrentSession();\n\n            switch (event.sessionState) {\n              case window.cast?.framework?.SessionState.SESSION_STARTED:\n              case window.cast?.framework?.SessionState.SESSION_RESUMED:\n                // Only set to casting if user didn't request stop\n                if (!userRequestedStop) {\n                  setIsCasting(true);\n                  setCastSession(session);\n                  if (session && room) {\n                    sendCastMessage(session);\n                  }\n                }\n                break;\n              case window.cast?.framework?.SessionState.SESSION_ENDED:\n                resetCastingState(true); // Clear user stop flag when session actually ends\n                break;\n              default:\n                // Handle SESSION_STARTING and SESSION_ENDING states\n                if (event.sessionState === 'SESSION_ENDING') {\n                  resetCastingState();\n                }\n                break;\n            }\n          }\n        );\n      } catch (error) {\n        console.error('Error setting up session listener:', error);\n      }\n    };\n\n    // Check if the Cast API is already available\n    if (window.chrome && window.chrome.cast && window.cast) {\n      initializeCastApi();\n    } else {\n      // If not available, set up the callback for when it becomes available\n      window.__onGCastApiAvailable = function (isAvailable: boolean) {\n        if (isAvailable) {\n          initializeCastApi();\n        }\n      };\n\n      // Load the Cast API script if it hasn't been loaded yet\n      if (!document.querySelector('script[src*=\"cast_sender.js\"]') && !window.__castScriptLoading) {\n        window.__castScriptLoading = true;\n        const script = document.createElement('script');\n        script.src = 'https://www.gstatic.com/cv/js/sender/v1/cast_sender.js?loadCastFramework=1';\n        script.onload = () => {\n          window.__castScriptLoading = false;\n        };\n        script.onerror = () => {\n          window.__castScriptLoading = false;\n          console.error('Failed to load Cast SDK');\n        };\n        document.head.appendChild(script);\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      // Don't reset the global callback as other instances might need it\n    };\n  }, [room, sendCastMessage, userRequestedStop, resetCastingState]);\n\n  // Function to toggle casting\n  const toggleCasting = () => {\n    if (!castReady) {\n      console.warn('Cast API not ready yet');\n      return;\n    }\n\n    if (isCasting) {\n      // Stop casting\n      setUserRequestedStop(true);\n\n      // Immediately set state since user requested it - don't wait for API response\n      resetCastingState();\n\n      // Send the disconnect request but don't wait for response\n      try {\n        const castContext = window.cast?.framework?.CastContext.getInstance();\n        if (castContext) {\n          castContext.endCurrentSession(true);\n        }\n\n        if (castSession) {\n          castSession.endSession(true);\n        }\n      } catch {\n        // Silently ignore disconnect errors since we've already updated the UI\n      }\n    } else {\n      // Clear user stop flag when starting new session\n      setUserRequestedStop(false);\n      // Start casting\n      try {\n        const castContext = window.cast?.framework?.CastContext.getInstance();\n        if (castContext) {\n          castContext\n            .requestSession()\n            .catch((error: Error) => console.error('Error requesting cast session:', error));\n        }\n      } catch (error) {\n        console.error('Error requesting cast session:', error);\n      }\n    }\n  };\n\n  // Send a new cast message when the room changes\n  useEffect(() => {\n    if (isCasting && castSession && room) {\n      sendCastMessage(castSession);\n    }\n  }, [room, isCasting, castSession, sendCastMessage]);\n\n  if (!castReady) return null;\n\n  return (\n    <Tooltip title={isCasting ? t('stopCasting') : t('startCasting')}>\n      <IconButton\n        ref={castButtonRef}\n        onClick={toggleCasting}\n        color={isCasting ? 'primary' : 'default'}\n      >\n        {isCasting ? <CastConnectedIcon /> : <CastIcon />}\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import { DarkMode as DarkModeIcon, LightMode as LightModeIcon } from '@mui/icons-material';\nimport { IconButton, Tooltip } from '@mui/material';\n\nimport { useTheme } from '@/context/theme';\nimport { useTranslation } from 'react-i18next';\n\ninterface ThemeToggleProps {\n  /** Size of the icon button */\n  size?: 'small' | 'medium' | 'large';\n  /** Custom tooltip text */\n  tooltip?: string;\n  /** Custom aria-label for accessibility */\n  'aria-label'?: string;\n}\n\nconst themeIcons = {\n  light: LightModeIcon,\n  dark: DarkModeIcon,\n};\n\nexport default function ThemeToggle({\n  size = 'medium',\n  tooltip,\n  'aria-label': ariaLabel,\n}: ThemeToggleProps) {\n  const { resolvedThemeMode, toggleTheme } = useTheme();\n  const { t } = useTranslation();\n\n  // Get current icon based on resolved theme mode\n  const CurrentIcon = themeIcons[resolvedThemeMode];\n\n  // Handle toggle\n  const handleToggle = () => {\n    toggleTheme();\n  };\n\n  // Get tooltip text\n  const getTooltipText = () => {\n    if (tooltip) return tooltip;\n\n    return resolvedThemeMode === 'light'\n      ? t('theme.switchToDark', 'Switch to dark theme')\n      : t('theme.switchToLight', 'Switch to light theme');\n  };\n\n  // Get aria-label for accessibility\n  const getAriaLabel = () => {\n    if (ariaLabel) return ariaLabel;\n    return `Toggle theme, currently ${resolvedThemeMode}`;\n  };\n\n  return (\n    <Tooltip title={getTooltipText()} arrow>\n      <IconButton\n        onClick={handleToggle}\n        size={size}\n        aria-label={getAriaLabel()}\n        sx={{\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            transform: 'scale(1.1)',\n            backgroundColor: 'action.hover',\n          },\n          '& .MuiSvgIcon-root': {\n            transition: 'transform 0.3s ease',\n          },\n          '&:hover .MuiSvgIcon-root': {\n            transform: 'rotate(180deg)',\n          },\n        }}\n      >\n        <CurrentIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n","import CircleIcon from '@mui/icons-material/Circle';\nimport { ButtonBase } from '@mui/material';\nimport { ReactNode, forwardRef } from 'react';\nimport { Player } from '@/types/player';\n\ninterface PlayerWithLocation extends Player {\n  location?: number;\n}\n\ninterface PlayersOnlineProps {\n  playerList: PlayerWithLocation[];\n  onClick?: () => void;\n  innerRef?: React.Ref<HTMLButtonElement>;\n  'aria-label'?: string;\n  'aria-expanded'?: boolean;\n  'aria-haspopup'?: boolean;\n  [key: string]: any;\n}\n\nconst PlayersOnline = forwardRef<HTMLButtonElement, PlayersOnlineProps>(\n  ({ playerList, onClick, innerRef, ...props }, ref): ReactNode => {\n    // Use ref as the primary reference, fallback to innerRef for backward compatibility\n    const combinedRef = ref || innerRef;\n\n    if (onClick) {\n      return (\n        <ButtonBase\n          {...props}\n          ref={combinedRef}\n          onClick={onClick}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            borderRadius: 1,\n            px: 0.5,\n            py: 0.25,\n            minWidth: 44, // Minimum touch target\n            minHeight: 44,\n            color: 'text.primary',\n            fontSize: 'inherit',\n            fontWeight: 500,\n            '&:hover': {\n              backgroundColor: 'action.hover',\n            },\n            '&:focus': {\n              backgroundColor: 'action.focus',\n            },\n          }}\n        >\n          <CircleIcon color=\"success\" sx={{ fontSize: 8, marginRight: '0.2rem' }} />\n          {playerList.length}\n        </ButtonBase>\n      );\n    }\n\n    return (\n      <div\n        {...props}\n        ref={combinedRef}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          color: 'var(--mui-palette-text-primary)',\n          fontWeight: 500,\n        }}\n      >\n        <CircleIcon color=\"success\" sx={{ fontSize: 8, marginRight: '0.2rem' }} />\n        {playerList.length}\n      </div>\n    );\n  }\n);\n\nPlayersOnline.displayName = 'PlayersOnline';\n\nexport default PlayersOnline;\n","import { Suspense, useState, useRef } from 'react';\nimport { CalendarMonth } from '@mui/icons-material';\nimport { AppBar, Badge, Box, IconButton, Portal, Toolbar } from '@mui/material';\nimport useSchedule from '@/context/hooks/useSchedule';\nimport useBreakpoint from '@/hooks/useBreakpoint';\nimport Logo from '@/images/blitzed-out.png';\nimport { useTranslation } from 'react-i18next';\nimport CastButton from '@/components/CastButton';\nimport ThemeToggle from '@/components/ThemeToggle';\nimport './styles.css';\nimport { isPublicRoom } from '@/helpers/strings';\nimport { Player } from '@/types/player';\nimport { lazyWithRetry } from '@/utils/lazyWithRetry';\n\n// Lazy load heavy components with retry logic\nconst Schedule = lazyWithRetry(() => import('@/views/Schedule'));\nconst MenuDrawer = lazyWithRetry(() => import('./MenuDrawer'));\nconst UserPresenceOverlay = lazyWithRetry(() => import('./UserPresenceOverlay'));\nimport PlayersOnline from './PlayersOnline';\n\ninterface PlayerWithLocation extends Player {\n  location?: number;\n}\n\ninterface NavigationProps {\n  room?: string;\n  playerList?: PlayerWithLocation[];\n}\n\nexport default function Navigation({ room, playerList = [] }: NavigationProps): JSX.Element {\n  const { t } = useTranslation();\n  const [openSchedule, setOpenSchedule] = useState<boolean>(false);\n  const [openUserPresence, setOpenUserPresence] = useState<boolean>(false);\n  const [seen, setSeen] = useState<boolean>(false);\n  const { schedule } = useSchedule();\n  const isMobile = useBreakpoint();\n  const playersOnlineRef = useRef<HTMLButtonElement>(null);\n\n  const handleScheduleClick = (): void => {\n    setOpenSchedule(true);\n    setSeen(true);\n  };\n\n  const handleUserPresenceClick = (): void => {\n    setOpenUserPresence(!openUserPresence);\n  };\n\n  const handleUserPresenceClose = (): void => {\n    setOpenUserPresence(false);\n  };\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar disableGutters variant=\"dense\" component=\"nav\" className=\"nav\">\n        <div className=\"site-name\">\n          <Box component=\"img\" sx={{ height: 32 }} alt=\"Blitzed Out Logo\" src={Logo} />\n          <h1 className=\"gradient-text\">Blitzed Out</h1>\n        </div>\n        <div>\n          <div className=\"nav-room-name\">\n            <h2>{isPublicRoom(room) || room === undefined ? t('public') : room}</h2>\n            <PlayersOnline\n              playerList={playerList}\n              onClick={handleUserPresenceClick}\n              ref={playersOnlineRef}\n              aria-label={t('online')}\n              aria-expanded={openUserPresence}\n              aria-haspopup=\"dialog\"\n            />\n            <IconButton onClick={handleScheduleClick} aria-label=\"schedule game\" sx={{ ml: 2 }}>\n              <Badge color=\"primary\" badgeContent={!seen ? schedule.length : null}>\n                <CalendarMonth />\n              </Badge>\n            </IconButton>\n            <Suspense fallback={null}>\n              {openSchedule && (\n                <Portal>\n                  <Schedule\n                    open={openSchedule}\n                    close={() => setOpenSchedule(false)}\n                    isMobile={isMobile}\n                  />\n                </Portal>\n              )}\n            </Suspense>\n            {playerList.length > 0 && (\n              <Suspense fallback={null}>\n                <UserPresenceOverlay\n                  isOpen={openUserPresence}\n                  onClose={handleUserPresenceClose}\n                  playerList={playerList}\n                  anchorEl={playersOnlineRef.current}\n                />\n              </Suspense>\n            )}\n          </div>\n        </div>\n\n        <div className=\"menu-drawer\">\n          <ThemeToggle size=\"medium\" aria-label=\"Toggle between light and dark theme\" />\n          <CastButton />\n          <Suspense fallback={null}>\n            <MenuDrawer />\n          </Suspense>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","/**\n * i18n Helper utilities and constants\n */\n\n// Supported languages with their display labels and voice settings\nexport const languages: Record<string, { label: string; voice: string }> = {\n  en: {\n    label: 'English',\n    voice: 'Google UK English Male',\n  },\n  es: {\n    label: 'Español',\n    voice: 'Google español de Estados Unidos',\n  },\n  fr: {\n    label: 'Français',\n    voice: 'Google français',\n  },\n  zh: {\n    label: '中文',\n    voice: 'Google 中文（中国大陆）',\n  },\n  hi: {\n    label: 'हिन्दी',\n    voice: 'Google हिन्दी',\n  },\n};\n"],"file":"js/chunk-CoT3YRZL.js"}