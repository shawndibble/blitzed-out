{"version":3,"file":"index.tsx-Udj355hm.js","sources":["../../src/views/UnauthenticatedApp/index.tsx"],"sourcesContent":["import './styles.css';\n\nimport AuthDialog, { AuthView } from '@/components/auth/AuthDialog';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CircularProgress,\n  Container,\n  Divider,\n  FormControl,\n  Grid,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { Language, Login, PersonAdd } from '@mui/icons-material';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\n\nimport GameGuide from '@/views/GameGuide';\nimport Navigation from '@/views/Navigation';\nimport { languages } from '@/services/i18nHelpers';\nimport useAuth from '@/context/hooks/useAuth';\nimport usePlayerList from '@/hooks/usePlayerList';\nimport { useSettings } from '@/stores/settingsStore';\n\nexport default function UnauthenticatedApp() {\n  const { i18n, t } = useTranslation();\n  const { login, user } = useAuth();\n  const [authDialogOpen, setAuthDialogOpen] = useState(false);\n  const [authDialogView, setAuthDialogView] = useState<AuthView>('login');\n  const [languageLoading, setLanguageLoading] = useState(false);\n\n  const handleOpenLogin = () => {\n    setAuthDialogView('login');\n    setAuthDialogOpen(true);\n  };\n\n  const handleOpenRegister = () => {\n    setAuthDialogView('register');\n    setAuthDialogOpen(true);\n  };\n\n  const params = useParams();\n  const [queryParams] = useSearchParams();\n  const hasImport = !!queryParams.get('importBoard');\n  const room = params.id ?? 'PUBLIC';\n  const playerList = usePlayerList();\n  const [displayName, setDisplayName] = useState(user?.displayName || '');\n\n  const [settings, updateSettings] = useSettings();\n\n  // Memoize handlers to prevent unnecessary re-renders\n  const handleSubmit = useCallback(\n    async (event: React.FormEvent<HTMLFormElement> | React.KeyboardEvent<HTMLDivElement>) => {\n      event.preventDefault();\n      await updateSettings({ ...settings, displayName, room });\n      await login(displayName);\n    },\n    [displayName, login, room, settings, updateSettings]\n  );\n\n  const onEnterKey = useCallback(\n    async (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (event.key === 'Enter') {\n        await handleSubmit(event);\n      }\n    },\n    [handleSubmit]\n  );\n\n  // Memoize language selection to prevent re-rendering\n  const currentLanguage = i18n.resolvedLanguage || 'en';\n\n  const handleLanguageChange = useCallback(\n    async (event: SelectChangeEvent<string>): Promise<void> => {\n      const newLanguage = event.target.value;\n      setLanguageLoading(true);\n\n      try {\n        // Language change will automatically trigger migration via MigrationContext\n        await i18n.changeLanguage(newLanguage);\n      } catch (error) {\n        console.error('Error changing language:', error);\n        // Still attempt to change language even if migration fails\n        await i18n.changeLanguage(newLanguage);\n      } finally {\n        setLanguageLoading(false);\n      }\n    },\n    [i18n]\n  );\n\n  const languageMenuItems = useMemo(\n    () =>\n      Object.entries(languages).map(([key, obj]) => (\n        <MenuItem value={key} key={key}>\n          {obj.label}\n        </MenuItem>\n      )),\n    []\n  );\n\n  return (\n    <>\n      <Navigation room={room} playerList={playerList} />\n      <Box className=\"unauthenticated-container gradient-background-vibrant\">\n        <Container maxWidth=\"lg\" sx={{ pt: 8 }}>\n          <Grid container spacing={4} justifyContent=\"center\" alignItems=\"stretch\">\n            {/* Main Setup Card */}\n            <Grid size={{ xs: 12, md: 6, lg: 4 }}>\n              <Card className=\"unauthenticated-card main-setup-card\">\n                <CardContent>\n                  <h2 className=\"setup\">\n                    <Trans i18nKey=\"setup\" />\n                  </h2>\n                  <Typography className=\"setup-subtitle\" variant=\"body1\">\n                    <Trans i18nKey=\"setupSubtitle\" />\n                  </Typography>\n                  <Box\n                    component=\"form\"\n                    method=\"post\"\n                    onSubmit={handleSubmit}\n                    className=\"settings-box\"\n                  >\n                    <TextField\n                      fullWidth\n                      id=\"displayName\"\n                      label={t('displayName')}\n                      value={displayName}\n                      onChange={(event) => setDisplayName(event.target.value)}\n                      required\n                      autoFocus\n                      onKeyDown={(event) => onEnterKey(event)}\n                      margin=\"normal\"\n                    />\n\n                    <Button\n                      variant=\"contained\"\n                      type=\"submit\"\n                      fullWidth\n                      className=\"jump-in-button\"\n                      size=\"large\"\n                      startIcon={<PersonAdd />}\n                      sx={{ mt: 2, py: 1.25, fontSize: '1.1rem', fontWeight: 600 }}\n                    >\n                      {hasImport ? <Trans i18nKey=\"import\" /> : <Trans i18nKey=\"anonymousLogin\" />}\n                    </Button>\n                    <Divider sx={{ my: 3 }}>\n                      <Typography\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                        sx={{ fontSize: '0.9rem' }}\n                      >\n                        <Trans i18nKey=\"or\" />\n                      </Typography>\n                    </Divider>\n                    <Box className=\"auth-button-container\">\n                      <Button\n                        variant=\"outlined\"\n                        startIcon={<Login />}\n                        onClick={handleOpenLogin}\n                        size=\"medium\"\n                      >\n                        <Trans i18nKey=\"signIn\" />\n                      </Button>\n                      <Button variant=\"outlined\" onClick={handleOpenRegister} size=\"medium\">\n                        <Trans i18nKey=\"createAccount\" />\n                      </Button>\n                    </Box>\n                  </Box>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            {/* Secondary Content Area for Desktop */}\n            <Grid size={{ md: 12, lg: 8 }}>\n              {/* Game Guide */}\n              <Card className=\"unauthenticated-card\">\n                <CardContent>\n                  <GameGuide />\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </Container>\n\n        {/* Footer Language Selector */}\n        <Box className=\"footer-language-container\">\n          <Box className=\"footer-language-selector\">\n            <Language sx={{ fontSize: '1rem', color: 'rgba(255, 255, 255, 0.5)' }} />\n            <FormControl size=\"small\" sx={{ minWidth: 120 }}>\n              <Select\n                value={currentLanguage}\n                disabled={languageLoading}\n                onChange={handleLanguageChange}\n                size=\"small\"\n                variant=\"standard\"\n                sx={{\n                  color: 'rgba(255, 255, 255, 0.7)',\n                  fontSize: '0.875rem',\n                  '& .MuiSelect-icon': {\n                    color: 'rgba(255, 255, 255, 0.5)',\n                  },\n                  '&:before': {\n                    borderBottomColor: 'rgba(255, 255, 255, 0.3)',\n                  },\n                  '&:hover:before': {\n                    borderBottomColor: 'rgba(255, 255, 255, 0.5)',\n                  },\n                }}\n                endAdornment={languageLoading && <CircularProgress size={14} />}\n              >\n                {languageMenuItems}\n              </Select>\n            </FormControl>\n          </Box>\n        </Box>\n      </Box>\n\n      <AuthDialog\n        open={authDialogOpen}\n        close={() => setAuthDialogOpen(false)}\n        initialView={authDialogView}\n      />\n    </>\n  );\n}\n"],"names":["UnauthenticatedApp","_a","i18n","useTranslation","login","user","useAuth","authDialogOpen","setAuthDialogOpen","useState","authDialogView","setAuthDialogView","languageLoading","setLanguageLoading","handleOpenLogin","handleOpenRegister","params","useParams","queryParams","useSearchParams","hasImport","room","playerList","usePlayerList","displayName","setDisplayName","settings","updateSettings","useSettings","handleSubmit","useCallback","event","__async","__spreadProps","__spreadValues","onEnterKey","currentLanguage","handleLanguageChange","newLanguage","error","languageMenuItems","useMemo","languages","key","obj","MenuItem","jsxs","Fragment","jsx","Navigation","Box","Container","Grid","Card","CardContent","Trans","Typography","TextField","Button","PersonAdd","Divider","Login","GameGuide","Language","FormControl","Select","CircularProgress","AuthDialog"],"mappings":"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"}