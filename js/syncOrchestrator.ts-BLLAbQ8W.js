!function(){try{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{}).SENTRY_RELEASE={id:"2206d228fcac56a8cb9865bdb7741398da22d1c9"}}catch(t){}}();try{(e=(new(t="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:{}).Error).stack)&&(t._sentryDebugIds=t._sentryDebugIds||{},t._sentryDebugIds[e]="00c9fb84-fac9-4b90-a23a-c9558bc374d6",t._sentryDebugIdIdentifier="sentry-dbid-00c9fb84-fac9-4b90-a23a-c9558bc374d6")}catch(t){}var t,e;import{syncCustomGroupsToFirebase as s,clearUserCustomGroups as i,syncCustomTilesToFirebase as r,deleteAllCustomTiles as a,resetDisabledDefaults as c,applyDisabledDefaults as n,syncAllDataToFirebase as o,cleanupDuplicateTiles as l}from"./syncService.ts-DhP7sRap.js";import{a0 as u,m as d,a1 as h,I as g}from"./chunk-DGlXwlwQ.js";import{f as y,d as f,b as m}from"./chunk-BohrMQ9l.js";import{a as p,u as w,q as S,s as b}from"../assets/index-CCWCqawP.js";import"./chunk-DZ47ck1L.js";import"./chunk-DH6bcLR5.js";import"./chunk-C3K6KbRU.js";class E{static getAuthenticatedUser(){const t=y().currentUser;if(!t)throw new Error("No user logged in");return t}static async getUserDocument(t){const e=f(u,"user-data",t);return await m(e)}static async addSyncDelay(){await new Promise(t=>setTimeout(t,50))}static removeId(t){const{id:e,...s}=t;return s}static handleSyncError(t,e){return{success:!1,errors:[e instanceof Error?e.message:String(e)]}}static createSuccessResult(t=0){return{success:!0,itemsProcessed:t}}}class _ extends E{static async syncFromFirebase(t,e){try{const i=await d({isDefault:!1});return 0===t.length&&i.length>0&&!e.forceSync?(await s(),this.createSuccessResult(i.length)):t.length>0&&i.length>0&&!e.forceSync?await this.mergeConflicts(t,i):t.length>0&&(0===i.length||e.forceSync)?await this.replaceLocal(t):this.createSuccessResult(0)}catch(i){return this.handleSyncError("custom groups sync",i)}}static async mergeConflicts(t,e){let i=0;for(const s of t)try{if(0===(await d({locale:s.locale,gameMode:s.gameMode,name:s.name})).length){const t=this.removeId(s);await h([t]),i++}}catch(r){}return await s(),this.createSuccessResult(i+e.length)}static async replaceLocal(t){await i(),await this.addSyncDelay();try{const e=t.map(t=>this.removeId(t));return await h(e),this.createSuccessResult(t.length)}catch(e){return this.handleSyncError("groups import",e)}}}class T{static createKey(t){if(!t.group_id)throw new Error(`Tile missing group_id for matching: ${JSON.stringify({id:t.id,group_id:t.group_id,action:t.action})}`);return`${t.group_id}|${t.intensity}|${t.action}`}static async findExistingTile(t){if(!t.group_id)throw new Error(`Cannot match tile without group_id: ${JSON.stringify({group_id:t.group_id,action:t.action})}`);try{const e=await p({group_id:t.group_id,intensity:t.intensity,action:t.action});return e.length>0?{existingTile:e[0],isExactMatch:!0,matchKey:this.createKey(t)}:{existingTile:null,isExactMatch:!1,matchKey:this.createKey(t)}}catch(e){throw e}}static async batchFindExistingTiles(t){const e=new Map,s=new Map;for(const a of t){if(!a.group_id)throw new Error(`Tile missing group_id: ${JSON.stringify({group_id:a.group_id,action:a.action})}`);const t=s.get(a.group_id)||[];t.push(a),s.set(a.group_id,t)}for(const[a,c]of s)try{const t=await p({group_id:a}),s=new Map;for(const e of t){const t=this.createKey(e);s.set(t,e)}for(const i of c){const t=this.createKey(i),r=s.get(t)||null;e.set(t,{existingTile:r,isExactMatch:null!==r,matchKey:t})}}catch(i){for(const t of c)try{const s=await this.findExistingTile(t);e.set(this.createKey(t),s)}catch(r){}}return e}static validateTileForMatching(t){const e=[];return t.group_id&&t.group_id.trim()||e.push("Missing group_id"),void 0!==t.intensity&&null!==t.intensity||e.push("Missing intensity"),t.action&&t.action.trim()||e.push("Missing action"),{valid:0===e.length,errors:e}}static tilesEqual(t,e){if(!t.group_id||!e.group_id)throw new Error("Cannot compare tiles without group_id");return t.group_id===e.group_id&&t.intensity===e.intensity&&t.action===e.action}static async generateMatchingStats(t){const e={totalTiles:t.length,tilesWithGroupId:0,tilesMissingGroupId:0,duplicateKeys:[],matchingErrors:[]},s=new Map;for(const r of t){r.group_id&&r.group_id.trim()?e.tilesWithGroupId++:e.tilesMissingGroupId++;const t=this.validateTileForMatching(r);if(t.valid)try{const t=this.createKey(r),i=s.get(t)||0;s.set(t,i+1),i>0&&e.duplicateKeys.push(t)}catch(i){e.matchingErrors.push({tile:r,error:i instanceof Error?i.message:String(i)})}else e.matchingErrors.push({tile:r,error:t.errors.join(", ")})}return e}}class F extends E{static async syncFromFirebase(t,e){try{const s=await p({isCustom:1});return 0===t.length&&s.length>0&&!e.forceSync?(await r(),this.createSuccessResult(s.length)):t.length>0&&s.length>0&&!e.forceSync?await this.mergeConflicts(t,s):t.length>0&&(0===s.length||e.forceSync)?await this.replaceLocal(t):this.createSuccessResult(0)}catch(s){return this.handleSyncError("custom tiles sync",s)}}static async mergeConflicts(t,e){let s=0,i=0;for(const r of t)try{if(1!==r.isCustom)continue;if(!r.group_id||!r.group_id.trim())throw new Error(`All tiles must have group_id for sync. Tile: ${r.action}`);const t=await T.findExistingTile(r);if(t.existingTile)t.existingTile.isEnabled!==r.isEnabled&&(await w(t.existingTile.id,{isEnabled:r.isEnabled}),i++);else{const t=this.removeId(r);await S(t),s++}}catch(a){}return await r(),this.createSuccessResult(s+i+e.length)}static async replaceLocal(t){await a(),await this.addSyncDelay();let e=0;for(const i of t)try{if(1!==i.isCustom)continue;if(!i.group_id||!i.group_id.trim())throw new Error(`All tiles must have group_id for sync. Tile: ${i.action}`);if(!(await T.findExistingTile(i)).existingTile){const t=this.removeId(i);await S(t),e++}}catch(s){}return this.createSuccessResult(e)}}class x extends E{static async syncFromFirebase(t){try{if(!t||0===t.length)return await c(),this.createSuccessResult(0);const e=100;return t.length>e?this.createSuccessResult(0):(await c(),await this.addSyncDelay(),await n(t),this.createSuccessResult(t.length))}catch(e){return this.handleSyncError("disabled defaults sync",e)}}}class R extends E{static async syncFromFirebase(t){if(!t||0===t.length)return this.createSuccessResult(0);try{let s=0;for(const i of t)try{await b({title:i.title,tiles:i.tiles||[],tags:i.tags||[],gameMode:i.gameMode||"online",isActive:i.isActive||0}),s++}catch(e){}return this.createSuccessResult(s)}catch(e){return this.handleSyncError("game boards sync",e)}}}class v extends E{static async syncFromFirebase(t){if(!t||0===Object.keys(t).length)return this.createSuccessResult(0);try{const{updateSettings:e}=g.getState(),s=Object.fromEntries(Object.entries(t).filter(([t,e])=>void 0!==e&&"localPlayers"!==t));return Object.keys(s).length>0?(e(s),this.createSuccessResult(Object.keys(s).length)):this.createSuccessResult(0)}catch(e){return this.handleSyncError("settings sync",e)}}}class M extends E{static async syncFromFirebase(t={}){try{const e=this.getAuthenticatedUser(),s=await this.getUserDocument(e.uid);if(!s.exists())return await o();const i=s.data();await l();const r=[this.syncCustomTiles(i,t),this.syncCustomGroups(i,t),this.syncDisabledDefaults(i),this.syncGameBoards(i),this.syncSettings(i)],a=await Promise.allSettled(r);let c=!0;return a.forEach((t,e)=>{"fulfilled"===t.status&&t.value.success||(c=!1)}),c}catch(e){return!1}}static async syncCustomTiles(t,e){if(void 0!==t.customTiles){const s=t.customTiles||[];return s.filter(t=>0===t.isCustom).length,await F.syncFromFirebase(s,e)}return this.createSuccessResult(0)}static async syncCustomGroups(t,e){return void 0!==t.customGroups?await _.syncFromFirebase(t.customGroups||[],e):this.createSuccessResult(0)}static async syncDisabledDefaults(t){return void 0!==t.disabledDefaults?await x.syncFromFirebase(t.disabledDefaults||[]):this.createSuccessResult(0)}static async syncGameBoards(t){return void 0!==t.gameBoards?await R.syncFromFirebase(t.gameBoards):this.createSuccessResult(0)}static async syncSettings(t){return void 0!==t.settings?await v.syncFromFirebase(t.settings||{}):this.createSuccessResult(0)}}export{M as SyncOrchestrator};
//# sourceMappingURL=syncOrchestrator.ts-BLLAbQ8W.js.map
