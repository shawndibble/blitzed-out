{"version":3,"file":"chunk-DeKR1DJi.js","sources":["../../src/components/auth/Login.tsx","../../src/components/auth/CreateAccount.tsx","../../src/components/auth/SocialLoginButtons.tsx","../../src/hooks/useAuth.ts","../../src/components/DialogWrapper/index.tsx","../../src/components/auth/ResetPasswordForm.tsx","../../src/components/auth/AuthDialog.tsx"],"sourcesContent":["import { useState, FormEvent, ChangeEvent } from 'react';\nimport { Box, Button, TextField, Typography, Alert, CircularProgress } from '@mui/material';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { loginWithEmail } from '@/services/firebase';\n\ninterface LoginProps {\n  onSuccess?: () => void;\n  onSwitchToRegister: () => void;\n  onSwitchToForgotPassword: () => void;\n  isLinking?: boolean;\n}\n\nexport default function Login({\n  onSuccess,\n  onSwitchToRegister,\n  onSwitchToForgotPassword,\n  isLinking = false,\n}: LoginProps): JSX.Element {\n  const { t } = useTranslation();\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      await loginWithEmail(email, password);\n      if (onSuccess) onSuccess();\n    } catch (err: any) {\n      console.error('Login error:', err);\n      setError(err.message || 'Failed to sign in');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label={t('email')}\n        name=\"email\"\n        autoComplete=\"email\"\n        autoFocus\n        value={email}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n      />\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label={t('password')}\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"current-password\"\n        value={password}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\n      />\n\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }} disabled={loading}>\n        {loading ? (\n          <CircularProgress size={24} />\n        ) : isLinking ? (\n          <Trans i18nKey=\"linkAccount\">Link Account</Trans>\n        ) : (\n          <Trans i18nKey=\"signIn\" />\n        )}\n      </Button>\n\n      <Typography align=\"center\">\n        <Button onClick={onSwitchToRegister} variant=\"text\">\n          <Trans i18nKey=\"needAccount\" />\n        </Button>\n        {' | '}\n        <Button onClick={onSwitchToForgotPassword} variant=\"text\">\n          <Trans i18nKey=\"forgotPassword\" />\n        </Button>\n      </Typography>\n    </Box>\n  );\n}\n","import { useState, FormEvent, ChangeEvent } from 'react';\nimport { Box, Button, TextField, Typography, Alert, CircularProgress } from '@mui/material';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { registerWithEmail } from '@/services/firebase';\n\ninterface CreateAccountProps {\n  onSuccess?: () => void;\n  onSwitchToLogin: () => void;\n  isAnonymous?: boolean;\n}\n\nexport default function CreateAccount({\n  onSuccess,\n  onSwitchToLogin,\n  isAnonymous = false,\n}: CreateAccountProps): JSX.Element {\n  const { t } = useTranslation();\n  const [displayName, setDisplayName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [confirmPassword, setConfirmPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError('');\n\n    // Validate passwords match\n    if (password !== confirmPassword) {\n      setError(t('passwordsDoNotMatch') || 'Passwords do not match');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await registerWithEmail(email?.trim(), password, displayName?.trim());\n      if (onSuccess) onSuccess();\n    } catch (err: any) {\n      console.error('Registration error:', err);\n      setError(err.message || 'Failed to create account');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"displayName\"\n        label={t('displayName')}\n        name=\"displayName\"\n        autoComplete=\"name\"\n        autoFocus\n        value={displayName}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setDisplayName(e.target.value)}\n      />\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label={t('email')}\n        name=\"email\"\n        autoComplete=\"email\"\n        value={email}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n      />\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"password\"\n        label={t('password')}\n        type=\"password\"\n        id=\"password\"\n        autoComplete=\"new-password\"\n        value={password}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\n      />\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        name=\"confirmPassword\"\n        label={t('confirmPassword')}\n        type=\"password\"\n        id=\"confirmPassword\"\n        autoComplete=\"new-password\"\n        value={confirmPassword}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setConfirmPassword(e.target.value)}\n      />\n\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }} disabled={loading}>\n        {loading ? (\n          <CircularProgress size={24} />\n        ) : isAnonymous ? (\n          <Trans i18nKey=\"linkAccount\" />\n        ) : (\n          <Trans i18nKey=\"createAccount\" />\n        )}\n      </Button>\n\n      <Typography align=\"center\">\n        <Button onClick={onSwitchToLogin} variant=\"text\">\n          <Trans i18nKey=\"alreadyHaveAccount\" />\n        </Button>\n      </Typography>\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport { Box, Button, Divider, Typography, Alert, CircularProgress } from '@mui/material';\nimport GoogleIcon from '@mui/icons-material/Google';\nimport { loginWithGoogle } from '@/services/firebase';\nimport { Trans } from 'react-i18next';\nimport { t } from 'i18next';\n\ninterface SocialLoginButtonsProps {\n  onSuccess?: () => void;\n  isLinking?: boolean;\n}\n\nexport default function SocialLoginButtons({\n  onSuccess,\n  isLinking = false,\n}: SocialLoginButtonsProps): JSX.Element {\n  const [error, setError] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleGoogleLogin = async () => {\n    setError('');\n    setLoading(true);\n\n    try {\n      await loginWithGoogle();\n      if (onSuccess) onSuccess();\n    } catch (err: any) {\n      setError(err.message || 'Failed to sign in with Google');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ mt: 2, mb: 2 }}>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Divider sx={{ mb: 2 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          <Trans i18nKey=\"or\">OR</Trans>\n        </Typography>\n      </Divider>\n\n      <Button\n        fullWidth\n        variant=\"outlined\"\n        startIcon={<GoogleIcon />}\n        onClick={handleGoogleLogin}\n        disabled={loading}\n        sx={{ mb: 1 }}\n        aria-busy={loading}\n        aria-live=\"polite\"\n      >\n        {loading ? (\n          <CircularProgress size={24} />\n        ) : isLinking ? (\n          t('linkWithGoogle', 'Link with Google')\n        ) : (\n          t('signInWithGoogle', 'Sign in with Google')\n        )}\n      </Button>\n    </Box>\n  );\n}\n","import { useContext } from 'react';\nimport { AuthContext, AuthContextType as ContextAuthType } from '@/context/auth';\n\nfunction useAuth(): ContextAuthType {\n  const context = useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n\n  return context;\n}\n\nexport { useAuth };\nexport default useAuth;\n","import { Dialog, DialogActions, DialogContent, DialogTitle, type DialogProps } from '@mui/material';\nimport CloseIcon from '@/components/CloseIcon';\nimport useBreakpoint from '@/hooks/useBreakpoint';\nimport { ReactNode } from 'react';\n\ninterface DialogWrapperProps {\n  children: ReactNode;\n  open: boolean;\n  close?: (() => void) | null;\n  isMobile?: boolean | null;\n  title?: ReactNode | null;\n  isLoading?: boolean;\n  maxWidth?: DialogProps['maxWidth'];\n  fullWidth?: boolean;\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n  actions?: ReactNode;\n}\n\nexport default function DialogWrapper({\n  children,\n  open,\n  close = null,\n  isMobile = null,\n  title = null,\n  isLoading = false,\n  maxWidth = 'md',\n  fullWidth = false,\n  ariaLabelledby,\n  ariaDescribedby,\n  actions,\n}: DialogWrapperProps): JSX.Element | null {\n  const breakpointResult = useBreakpoint();\n  const isMobileBreakpoint = isMobile !== null ? isMobile : breakpointResult;\n\n  if (isLoading) {\n    return null;\n  }\n\n  return (\n    <Dialog\n      fullScreen={isMobileBreakpoint}\n      open={open}\n      maxWidth={maxWidth}\n      fullWidth={fullWidth}\n      aria-labelledby={ariaLabelledby}\n      aria-describedby={ariaDescribedby}\n    >\n      <DialogTitle>\n        {title}\n        {typeof close === 'function' && <CloseIcon close={close} />}\n      </DialogTitle>\n      <DialogContent>{children}</DialogContent>\n      {actions && <DialogActions sx={{ p: 2, gap: 1 }}>{actions}</DialogActions>}\n    </Dialog>\n  );\n}\n","import { useState, FormEvent, ChangeEvent } from 'react';\nimport { Box, Button, TextField, Alert, CircularProgress } from '@mui/material';\nimport { useAuth } from '@/hooks/useAuth';\nimport { Trans } from 'react-i18next';\nimport { AuthView } from './AuthDialog';\n\ninterface ResetPasswordFormProps {\n  onToggleForm: (view: AuthView) => void;\n}\n\nexport default function ResetPasswordForm({ onToggleForm }: ResetPasswordFormProps): JSX.Element {\n  const [email, setEmail] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { forgotPassword } = useAuth();\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError('');\n    setSuccess(false);\n    setLoading(true);\n\n    try {\n      await forgotPassword(email);\n      setSuccess(true);\n    } catch (err: any) {\n      setError(err.message || 'Failed to send reset email');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Alert>\n      )}\n      {success && (\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\n          <Trans i18nKey=\"resetEmailSent\" />\n        </Alert>\n      )}\n\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        id=\"email\"\n        label={<Trans i18nKey=\"email\" />}\n        name=\"email\"\n        autoComplete=\"email\"\n        autoFocus\n        value={email}\n        onChange={(e: ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n      />\n\n      <Button type=\"submit\" fullWidth variant=\"contained\" sx={{ mt: 3, mb: 2 }} disabled={loading}>\n        {loading ? <CircularProgress size={24} /> : <Trans i18nKey=\"sendResetLink\" />}\n      </Button>\n\n      <Box sx={{ textAlign: 'center' }}>\n        <Button variant=\"text\" onClick={() => onToggleForm('login')}>\n          <Trans i18nKey=\"backToLogin\" />\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport Login from './Login';\nimport CreateAccount from './CreateAccount';\nimport SocialLoginButtons from './SocialLoginButtons';\nimport { useAuth } from '@/hooks/useAuth';\nimport DialogWrapper from '../DialogWrapper';\nimport ResetPasswordForm from './ResetPasswordForm';\nimport { useTranslation } from 'react-i18next';\n\nexport type AuthView = 'login' | 'register' | 'reset';\n\ninterface AuthDialogProps {\n  open: boolean;\n  close: () => void;\n  initialView?: AuthView;\n}\n\nexport default function AuthDialog({\n  open,\n  close,\n  initialView = 'login',\n}: AuthDialogProps): JSX.Element {\n  const [currentView, setCurrentView] = useState<AuthView>(initialView);\n  const { isAnonymous } = useAuth();\n  const { t } = useTranslation();\n\n  const getTitle = () => {\n    switch (currentView) {\n      case 'login':\n        return isAnonymous ? t('linkAccount') : t('signIn');\n      case 'register':\n        return t('createAccount');\n      case 'reset':\n        return t('resetPassword');\n      default:\n        return t('Authentication');\n    }\n  };\n\n  return (\n    <DialogWrapper title={getTitle()} open={open} close={close}>\n      {currentView === 'login' && (\n        <>\n          <Login\n            onSwitchToRegister={() => setCurrentView('register')}\n            onSwitchToForgotPassword={() => setCurrentView('reset')}\n            onSuccess={close}\n            isLinking={isAnonymous}\n          />\n          <SocialLoginButtons onSuccess={close} isLinking={isAnonymous} />\n        </>\n      )}\n\n      {currentView === 'reset' && <ResetPasswordForm onToggleForm={setCurrentView} />}\n\n      {currentView === 'register' && (\n        <CreateAccount\n          onSwitchToLogin={() => setCurrentView('login')}\n          onSuccess={close}\n          isAnonymous={isAnonymous}\n        />\n      )}\n    </DialogWrapper>\n  );\n}\n"],"names":["Login","onSuccess","onSwitchToRegister","onSwitchToForgotPassword","isLinking","t","useTranslation","email","setEmail","useState","password","setPassword","error","setError","loading","setLoading","handleSubmit","e","loginWithEmail","err","jsxs","Box","jsx","Alert","TextField","Button","CircularProgress","Trans","Typography","CreateAccount","onSwitchToLogin","isAnonymous","displayName","setDisplayName","confirmPassword","setConfirmPassword","registerWithEmail","SocialLoginButtons","handleGoogleLogin","loginWithGoogle","Divider","GoogleIcon","useAuth","context","useContext","AuthContext","DialogWrapper","children","open","close","isMobile","title","isLoading","maxWidth","fullWidth","ariaLabelledby","ariaDescribedby","actions","breakpointResult","useBreakpoint","isMobileBreakpoint","Dialog","DialogTitle","CloseIcon","DialogContent","DialogActions","ResetPasswordForm","onToggleForm","success","setSuccess","forgotPassword","AuthDialog","initialView","currentView","setCurrentView","getTitle","Fragment"],"mappings":"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"}