import{a as U}from"./chunk-CygiBK7d.js";const l=50,_=U((r,a)=>({onlineUsers:{},loading:!1,error:null,room:null,_performanceMetrics:{lastUpdateTime:Date.now(),updateCount:0,averageUpdateInterval:0},_pendingUpdates:{},_batchTimeout:null,setUsers:e=>{const t=Date.now();r(n=>{const s=t-n._performanceMetrics.lastUpdateTime,o=n._performanceMetrics.updateCount+1,i=(n._performanceMetrics.averageUpdateInterval*n._performanceMetrics.updateCount+s)/o;return{onlineUsers:e,loading:!1,error:null,_performanceMetrics:{lastUpdateTime:t,updateCount:o,averageUpdateInterval:i}}})},addUser:(e,t)=>{const n=a();n._pendingUpdates[e]=t,n._batchTimeout&&clearTimeout(n._batchTimeout);const s=setTimeout(()=>{n.flushPendingUpdates()},l);r({_batchTimeout:s})},removeUser:e=>{const t=a();t._pendingUpdates[e]=null,t._batchTimeout&&clearTimeout(t._batchTimeout);const n=setTimeout(()=>{t.flushPendingUpdates()},l);r({_batchTimeout:n})},batchUpdateUsers:e=>r(t=>{const n={...t.onlineUsers};Object.entries(e).forEach(([c,p])=>{if(p===null){const{[c]:m,...u}=n;Object.assign(n,u)}else n[c]=p});const s=Date.now(),o=s-t._performanceMetrics.lastUpdateTime,i=t._performanceMetrics.updateCount+1,d=(t._performanceMetrics.averageUpdateInterval*t._performanceMetrics.updateCount+o)/i;return{onlineUsers:n,_performanceMetrics:{lastUpdateTime:s,updateCount:i,averageUpdateInterval:d}}}),flushPendingUpdates:()=>{const e=a();Object.keys(e._pendingUpdates).length!==0&&(e.batchUpdateUsers(e._pendingUpdates),r(()=>({_pendingUpdates:{}})))},clearUsers:()=>r(()=>({onlineUsers:{},loading:!1,error:null,_pendingUpdates:{}})),setLoading:e=>r(()=>({loading:e})),setError:e=>r(()=>({error:e,loading:!1})),setRoom:e=>r(()=>({room:e})),getUsersByRoom:e=>{const t=a();return t.onlineUsers},getActiveUserCount:()=>{const e=a();return Object.keys(e.onlineUsers).length},getPerformanceMetrics:()=>a()._performanceMetrics}));export{_ as u};
