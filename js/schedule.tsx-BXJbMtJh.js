import{a7 as f,r as u,j as _}from"./chunk-CtNZuTpO.js";import{h as S,i as C}from"./chunk-C4YSGLga.js";import{d as T}from"./chunk-DN9j8ish.js";import{a as M}from"./chunk-Bnn2067E.js";import"../assets/index-C75Wf0CC.js";import"./chunk-DXz8SlaL.js";const p=300*1e3,U=100,g=M((n,r)=>({schedule:[],loading:!1,error:null,_cache:{upcomingSchedule:{data:[],timestamp:0,limit:0},roomSchedule:{}},_performanceMetrics:{lastUpdateTime:Date.now(),updateCount:0,cacheHitRate:0},_pendingUpdates:[],_batchTimeout:null,loadSchedule:e=>{const t=Date.now();n(c=>{const a=c._performanceMetrics.updateCount+1;return{schedule:e,loading:!1,error:null,_performanceMetrics:{lastUpdateTime:t,updateCount:a,cacheHitRate:c._performanceMetrics.cacheHitRate}}}),r().invalidateCache()},addScheduleItem:e=>{const t=r();n(a=>({_pendingUpdates:[...a._pendingUpdates,e]})),t._batchTimeout&&clearTimeout(t._batchTimeout);const c=setTimeout(()=>{r().flushPendingScheduleUpdates()},U);n(()=>({_batchTimeout:c}))},batchAddScheduleItems:e=>n(t=>{const c=[...t.schedule,...e],a=Date.now(),d=t._performanceMetrics.updateCount+1;return{schedule:c,_performanceMetrics:{lastUpdateTime:a,updateCount:d,cacheHitRate:t._performanceMetrics.cacheHitRate}}}),flushPendingScheduleUpdates:()=>{const e=r();e._pendingUpdates.length!==0&&(e._batchTimeout&&clearTimeout(e._batchTimeout),e.batchAddScheduleItems(e._pendingUpdates),n(()=>({_pendingUpdates:[],_batchTimeout:null})),e.invalidateCache())},removeScheduleItem:e=>{n(t=>({schedule:t.schedule.filter(c=>c.id!==e)})),r().invalidateCache()},clearSchedule:()=>{const e=r();e._batchTimeout&&clearTimeout(e._batchTimeout),n(()=>({schedule:[],loading:!1,error:null,_pendingUpdates:[],_batchTimeout:null})),r().invalidateCache()},invalidateCache:()=>n(()=>({_cache:{upcomingSchedule:{data:[],timestamp:0,limit:0},roomSchedule:{}}})),setLoading:e=>n(()=>({loading:e})),setError:e=>n(()=>({error:e,loading:!1})),getUpcomingSchedule:(e=10)=>{const t=r(),c=Date.now(),a=t._cache.upcomingSchedule;if(a.timestamp>0&&c-a.timestamp<p&&a.limit>=e){const o=t._performanceMetrics.updateCount+1,m=(t._performanceMetrics.cacheHitRate*(o-1)+1)/o;return n(h=>({_performanceMetrics:{...h._performanceMetrics,cacheHitRate:m}})),a.data.slice(0,e)}const s=T(),i=t.schedule.filter(o=>o.dateTime.isAfter(s)).sort((o,l)=>o.dateTime.valueOf()-l.dateTime.valueOf()).slice(0,Math.max(e,20));return n(o=>({_cache:{...o._cache,upcomingSchedule:{data:i,timestamp:c,limit:Math.max(e,20)}}})),i.slice(0,e)},getScheduleByRoom:e=>{const t=r(),c=Date.now(),a=t._cache.roomSchedule[e];if(a&&a.timestamp>0&&c-a.timestamp<p){const i=t._performanceMetrics.updateCount+1,l=(t._performanceMetrics.cacheHitRate*(i-1)+1)/i;return n(m=>({_performanceMetrics:{...m._performanceMetrics,cacheHitRate:l}})),a.data}const s=t.schedule.filter(i=>i.room===e);return n(i=>({_cache:{...i._cache,roomSchedule:{...i._cache.roomSchedule,[e]:{data:s,timestamp:c}}}})),s},getPerformanceMetrics:()=>r()._performanceMetrics})),H=f.createContext(void 0);function A(n){const{schedule:r,loadSchedule:e,flushPendingScheduleUpdates:t}=g(),c=u.useRef(null),a=u.useCallback(o=>{e(o)},[e]),d=u.useCallback(async(o,l,m)=>{try{const h=await S(o,l,m);return t(),h||void 0}catch(h){throw console.error("Error adding to schedule:",h),h}},[t]),s=u.useCallback(()=>{c.current&&(c.current(),c.current=null),t()},[t]);u.useEffect(()=>(s(),c.current=C(a),s),[a,s]),u.useEffect(()=>s,[s]);const i=u.useMemo(()=>({schedule:r,addToSchedule:d}),[r,d]);return _.jsx(H.Provider,{value:i,...n})}export{H as ScheduleContext,A as ScheduleProvider};
